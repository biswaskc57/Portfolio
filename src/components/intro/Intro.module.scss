@use '../../variables' as *;

.introContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 80vh;
  max-height: 150vh;
  justify-content:space-around;
  background-size: contain;
  border-bottom: 4px solid transparent;
  background-size: 200% 100%;
  background-clip: padding-box;
  animation: gradient-border 3s infinite alternate;
  padding: 20px; // Padding for mobile adjustments
  position: relative;
  @include separator;
}

@keyframes gradient-border {
  0% { background-position: 0% 100%; }
  100% { background-position: 100% 100%; }
}

.introElements {
  display: flex;
  flex-direction: row-reverse;
  // align-items: center;
  filter: brightness(1.3);
  text-align: center;
  width: 80%;
}

.text {
  width: 80%;
}

.myImage {
  height: 18rem;
  max-width: 80vw;
  border-radius: 50%;
  object-fit: cover;
  animation: slideInImage 0.3s ease-out forwards;
}

.myElement {
  display: flex;
  align-items: center;
}

.myElement.animate {
  opacity: 1;
  animation: slideInImage 0.75s ease-out forwards;
}

@keyframes slideInImage {
  0% {
    opacity: 0;
    transform: translateX(100vw);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.typewriterText {
  z-index: 3;
  margin: 20px;
  border-radius: 15px;
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.typewriterText.animateText {
  transform: translateX(0);
  animation: slideInFromLeft 1.5s ease-out forwards;
}

@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-100vw);
  }
  100% {
    opacity: 1;
    transform: translateX(0) ;
  }
}

.name {
  color: $h4-color;
  text-align: left;
}

.profession {
  display: block;
  // animation: typing 6s steps(60, end) 1;
  margin: 10px 0px;
  text-align: start;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

.buttons {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 80%;
  gap: 30px;
}

.buttons a {
  flex: 1;  // Make each <a> take equal space
  display: block; // Ensure that <a> is a block-level element to take up the width
  color: inherit;
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  backdrop-filter: blur(10px); // Adjust blur intensity as needed
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background: inherit;
  padding: 2rem;
  border-radius: 8px;
  position: relative;
  max-width: 500px;
  width: 100%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.closeButton {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 1.5rem;
  background: none;
  border: none;
  cursor: pointer;
  color: #333;
  transition: color 0.2s;

  &:hover {
    color: #d9534f;
  }
}



/* Define the initial fade-in animation */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(+10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Define the bounce animation */
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* This class applies the initial fade-in and bounce effect */
.animateCaret {
  margin-top: 30px;
  opacity: 1;
  animation: fadeInUp 1.5s ease forwards, bounce 1.5s ease-in-out 3s infinite;
}

/* This class hides the element */
.hideCaret {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease, transform 0.5s ease;
}

/* Mobile Responsive Styles */
@media only screen and (max-width: 768px) {
  .introContainer {
    top: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-size: contain;
    border-bottom: 4px solid transparent;
    background-clip: padding-box;
    animation: gradient-border 3s infinite alternate;
    padding: 20px; // Padding for mobile adjustments
    @include separator;
  }

  .introElements {
    display: flex;
    flex-direction: column;
    align-items: center;
    filter: brightness(1.3);
    text-align: center;
    width: 100%;
  }

  .text {
    width: 100%;
  }

  .profession {
    font-size: 1rem;
    align-self: center;
  }

  .buttons {
    flex-direction: column;
    align-self: center;
    gap: 10px;
  }

  .typewriterText {
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
}